{% extends 'GamingPlatformBundle:GameSession:base_game_session.html.twig' %}

{% block body %}
	{{ ws_client() }}

<script type="text/javascript">
// 	GLOBAL VARIABLES FROM TWIG 
	var room = "{{ game_session.getId() }}";
	var rol_game_name = "{{ game_session.getRolGame.getName() }}";
	var user_username = "{{ app.user.username }}";
	var game_session_owner_username = "{{ game_session.getOwner().getUsername() }}";
	var _WS_URI = "ws://{{ gos_web_socket_server_host }}:{{ gos_web_socket_server_port }}";
	var websocket = WS.connect(_WS_URI);
// 	GLOBAL VARIABLES FROM TWIG 

    function isGamemaster()
    {
    	return user_username == game_session_owner_username;
    }

	
// ||||||||||||||||||||||||||||||||||||| WEBSOCKET |||||||||||||||||||||||||||||||||||||||||||
	websocket.on("socket/connect", function(session){

		var route_game_session = "gameSession/";
		route_game_session = route_game_session.concat(room);
		session.subscribe(route_game_session, function(uri, payload){

// 			alert(JSON.stringify(payload_json));
		    switch(payload.section) {
		    case 'connection':
			    subscribeConnection(payload);
			    break;
		    case 'settings':
			    subscribeSettings(payload);
			    break;
		    case 'chat':
		    	subscribeChat(payload);
			    break;
		    case 'map':
			    subscribeMap(payload);
			    break;
		    case 'utilities':
// 			    suscribeUtilities(payload);
		    	break;
		    case "import_character_sheet":
		    	subscribeImportCharacterSheet(payload);
			    break;
		    case 'functionality_character_sheet':
		    	subscribeFunctionalityCharacterSheet(payload);
			    break;
		    }
		});
		
// SETTINGS
		$( "#game_session_edit_button" ).on('click', function() {
			session.publish(route_game_session, {
				section: "settings",
				option: "game_session_request_edit"
			});
		});

		$( '#myModal' ).on('click', '.modal-dialog > .modal-content > .modal-footer > #game_session_edit_submit_button', function() {
	 		var game_session_edited = JSON.stringify($(this).parent().siblings('.modal-body').children('#form_edit_game_session').serializeArray());
			session.publish(route_game_session, {
				section: "settings",
				option: "game_session_edit",
				game_session_edited: game_session_edited
			});
		});

		$( '#myModal' ).on('click', '.modal-dialog > .modal-content > .modal-footer > #game_session_remove_submit_button', function() {
			session.publish(route_game_session, {
				section: "settings",
				option: "remove_game_session"
			});
		});

		$( "#manage_users_button" ).on('click', function() {
			session.publish(route_game_session, {
				section: "settings",
				option: "manage_users_request"
			});
		});

		$( '#myModal' ).on('click', '.modal-dialog > .modal-content > .modal-body > #form > #remove_user > button', function() {
			session.publish(route_game_session, {
				section: "settings",
				option: "remove_user",
				user_username_to_remove: $(this).attr('id')
			});
			closePopup();
			setTimeout(function () {
				session.publish(route_game_session, {
					section: "settings",
					option: "manage_users_request"
				});
			}, 1000);
		});
// SETTINGS


// CHAT
		$( "#chat_send_button" ).click(function() {
			var newText = $( "#chat_new_text" ).val();
			if (newText != '') {
				session.publish(route_game_session, {
					section:"chat", 
					msg: newText
				});
				$( "#chat_new_text" ).val('');
			}
		});

	 	$(document).keypress(function(e) {
	 	    if(e.which == 13) {
	 	 	    if ($("#chat_new_text").is(":focus")) {
	 				var newText = $( "#chat_new_text" ).val();
	 				if (newText != '') {
		 				session.publish(route_game_session, {
		 					section:"chat", 
		 					msg: newText
		 				});
		 				$( "#chat_new_text" ).val('');
		 				$('.panel-body').animate({scrollTop: $('.panel-body').prop('scrollHeight')});
	 				}
				}
	 	    }
	 	});
// CHAT


// IMPORT CHARACTER SHEET
		$( '#'+user_username ).on('click', '#import_character_sheet > #request_character_sheet_button', function() {
			session.publish(route_game_session, {
				section:'import_character_sheet',
				option: 'request'
			});
		});

		$( '#request_character_sheet_button' ).on('click', function() {
			session.publish(route_game_session, {
				section:'import_character_sheet',
				option: 'request'
			});
		});

		$( '#myModal' ).on('click', '#character_sheet_import_button', function() {
			var character_sheet_id = getCharacterSheetIdFromElement($(this));
			closePopup();
			session.publish(route_game_session, {
				section:'import_character_sheet',
				option: 'import', 
				character_sheet_id: character_sheet_id});
 		});

 		$( '.main-container' ).on('click', '#character_sheet_delete_button', function() {
 	 		var are_you_sure_trans = '{% trans %}are_you_sure{% endtrans %}';
 		    if (confirm(are_you_sure_trans)) {
 	 			var character_sheet_id = getCharacterSheetIdFromElement($(this));
 	 			
 	 			session.publish(route_game_session, {
 	 				section:'import_character_sheet',
 	 				option: 'delete', 
 	 				character_sheet_id: character_sheet_id});
 		    }
 		    return false;
 		});
// IMPORT CHARACTER SHEET


// FUNCTIONALITY CHARACTER SHEET
     	$( ".main-container" ).on("click", "#functional_panel_throw_button", function() {
    		var character_sheet_id = getCharacterSheetIdFromJQuery(this);
    		if (character_sheet_id) {

    			var character_sheet_functionality_executed = character_sheets_current_functionality[character_sheet_id];
				var launch_system = $( "#"+character_sheet_id+" #functional_panel_data #launch_system" );
				if (launch_system.length) {
					
					for (functionality_executed in character_sheet_functionality_executed) {
						character_sheet_functionality_executed[functionality_executed]['launch_system']['dificulty'] = launch_system.children('#difficulty').val();
// 						alert(JSON.stringify(character_sheet_functionality_executed[functionality_executed]));
					}
				}

				character_sheet_functionality_executed_json = JSON.stringify(character_sheets_current_functionality[character_sheet_id]);
				alert(character_sheet_functionality_executed_json);
    			
    			deleteFunctionalPanelFromCharacterSheet(character_sheet_id);
 	 			session.publish(route_game_session, {
 	 				section:'functionality_character_sheet',
 	 				option: 'execute_functionality', 
 	 				character_sheet_id: character_sheet_id,
 	 				character_sheet_functionality_executed_json: character_sheet_functionality_executed_json
 				});
    		}
     	});

//  		$( "#"+user_username ).on("click", "#individual_functionality_panel > #individual_functionality_panel_throw_button", function() {

//  			var elements = $("#individual_functionality_panel > div").toArray();
//  			var throwing = [];
//  			for (var count_elements = 0;
//  					count_elements < elements.length; 
//  					count_elements++) {
//  				//alert(JSON.stringify(elements[count_elements].id));
//  				switch (elements[count_elements].id) {
//  				case "result_type":
//  					var sub_element = { 
//  						    result_type: {type: $("#individual_functionality_panel > #"+elements[count_elements].id+" #type").text(),
//  							    			name: $("#individual_functionality_panel > #"+elements[count_elements].id+" #name").text(),
//  							    			value: $("#individual_functionality_panel > #"+elements[count_elements].id+" #value").val()}
//  						};
//  					throwing.push(sub_element);
//  					break;

//  				default:
//  					var sub_element = {};
//  					sub_element[elements[count_elements].id] = {
//  							value: $("#individual_functionality_panel > #"+elements[count_elements].id+" #value").val()
//  					}
//  					throwing.push(sub_element);
//  					break;
//  				}
//  			}
//  			deleteFunctionalityPanel();

//  			var sheet_id = {sheet_id: individual_functionality_actual_character_sheet_id}
//  			throwing.push(sheet_id);
//  			var throwing_json = JSON.stringify(throwing);

//  			var functionality_character_sheet_option = "individual";
//  			session.publish(route_game_session, {
//  				section:"functionality_character_sheet",
//  				option: functionality_character_sheet_option, 
//  				throwing: throwing_json
//  			});
//  		});

//  		$( "#"+user_username ).on("click", "#individual_functionality_panel > #individual_functionality_panel_cancel_button", function() {
//  			deleteFunctionalityPanel();
//  		});
// FUNCTIONALITY CHARACTER SHEET

// MAP
        $( "#map_container" ).on( "myAddTokenMapEvent", function( event, data_json ) {
 			session.publish(route_game_session, {
 				section: 'map',
 				option: 'add_token', 
 				data_json: data_json
 			});
        });

        $( "#map_container" ).on( "myDraggTokenMapEvent", ".map-token", function( event, data_json ) {
 			session.publish(route_game_session, {
 				section: 'map',
 				option: 'move_token', 
 				data_json: data_json
 			});
        });

    	$( "#map_container" ).on("click", "#map_panel_delete_token_button", function() {
    		if (last_map_token_selected_id) {
    			var are_you_sure_trans = '{% trans %}are_you_sure{% endtrans %}';
    			if (confirm(are_you_sure_trans)) {
    	 			session.publish(route_game_session, {
    	 				section: 'map',
    	 				option: 'delete_token', 
    	 				token_id: last_map_token_selected_id
    	 			});
    				last_map_token_selected_id = null;
    			}
    		}
    		else {
    			var no_token_select_trans = '{% trans %}map.no_token_select{% endtrans %}';
    			alert(no_token_select_trans);
    		}
    	});

    	$( "#map_container" ).on("click", "#map_panel_delete_all_tokens_button", function() {
        	var tokens_in_game_count = 0;
        	$('#map_container .map-token').each(function() {
        		tokens_in_game_count++;
      		});
    		if (tokens_in_game_count != 0) {
    			var are_you_sure_trans = '{% trans %}are_you_sure{% endtrans %}';
    			if (confirm(are_you_sure_trans)) {
    	 			session.publish(route_game_session, {
    	 				section: 'map',
    	 				option: 'delete_all_tokens'
    	 			});
    	 			last_map_token_selected_id = null;
    			}
    		}
    		else {
    			var no_tokens_in_game_trans = '{% trans %}map.no_tokens_in_game{% endtrans %}';
    			alert(no_tokens_in_game_trans);
    		}
    	});
// MAP

// UTILITIES
		$( '#myModal' ).on('click', '#throw_dice', function() {

			var dice_to_roll = {};

			$( '.select-dice' ).each(function() {
				var dice_value = $(this).attr('value');
				var number_of_dice = $(this).children('input').val();
				dice_to_roll[dice_value] = number_of_dice;
			});
			dice_to_roll_json = JSON.stringify(dice_to_roll);
			
 			session.publish(route_game_session, {
 				section: 'utilities',
 				option: 'throw_dice', 
 				dice_to_roll_json: dice_to_roll_json
 			});

 			closePopup();
		});
// UTILITIES
 	});
 	websocket.on("socket/disconnect", function(error){ //CHANGE
 	    $( "#chat #written-text" ).append("Disconnected for " + error.reason + " with code " + error.code);
 	    $( "#chat #written-text" ).append("&#10;");
 	}); 
 // ||||||||||||||||||||||||||||||||||||| END WEBSOCKET |||||||||||||||||||||||||||||||||||||||||||
</script>

	{{ include('GamingPlatformBundle:GameSession:base_popup.html.twig') }}
    {{ include('GamingPlatformBundle:GameSession:game_session_map_container.html.twig') }}
    {{ include('GamingPlatformBundle:GameSession:game_session_game_container.html.twig') }}
{% endblock %}
